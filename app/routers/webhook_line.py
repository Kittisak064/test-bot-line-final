from fastapi import APIRouter, Request
from app.services.respond import generate_reply
from app.services.line_api import send_line_reply  # ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å services

router = APIRouter()

@router.post("/webhook/line")
async def line_webhook(req: Request):
    """
    Webhook ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏±‡∏ö event ‡∏à‡∏≤‡∏Å LINE Messaging API
    """
    body = await req.json()
    events = body.get("events", [])

    for ev in events:
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
        if ev.get("type") == "message" and ev["message"]["type"] == "text":
            user_text = ev["message"]["text"]
            reply_token = ev["replyToken"]

            # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ AI
            bot_resp = await generate_reply(user_text)

            # ‡∏ñ‡πâ‡∏≤ AI ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô string
            if isinstance(bot_resp, str):
                await send_line_reply(reply_token, bot_resp)

            # ‡∏ñ‡πâ‡∏≤ AI ‡∏™‡πà‡∏á‡∏°‡∏≤‡πÄ‡∏õ‡πá‡∏ô dict (‡∏°‡∏µ text ‡πÅ‡∏•‡∏∞ handover)
            elif isinstance(bot_resp, dict):
                if "text" in bot_resp:
                    await send_line_reply(reply_token, bot_resp["text"])
                if bot_resp.get("handover"):
                    await send_line_reply(reply_token, "üëâ ‡∏£‡∏∞‡∏ö‡∏ö‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡πà‡∏á‡∏ï‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏î‡∏π‡πÅ‡∏•‡∏ï‡πà‡∏≠‡∏Ñ‡πà‡∏∞")

    return {"status": "ok"}
